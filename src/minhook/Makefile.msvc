# nmake -f Makefile.msvc
CC       = $(CC).exe
CXX      = $(CXX).exe
CFLAGS   = /nologo /W3 /WX- /TC /fp:precise /D "_LIB" /D "NDEBUG" /D "_UNICODE" /D "UNICODE" /D "_CRT_SECURE_NO_WARNINGS"
LIBFLAGS = /NOLOGO

!if "$(CC)"=="clang-cl.exe"
AR       = llvm-lib.exe
!elseif "$(CC)"=="cl.exe"
AR       = lib.exe
!else
!ERROR Unsupported platforms!
!endif

!if "$(MY_DEBUG)"=="1"
CFLAGS = $(CFLAGS) /O2 /Zi /Fd$(DISTDIR)\minhook$(BITS).pdb /D "DEBUG" /D "_LOGDEBUG"
LDFLAGS  = $(LDFLAGS) /DEBUG
!elseif "$(CC)"=="cl.exe"
CFLAGS = $(CFLAGS) /O2 /GL /Gd /D "NDEBUG"
LIBFLAGS = $(LIBFLAGS) /LTCG
!else
CFLAGS = $(CFLAGS) /O2 /D "NDEBUG" -flto=thin
LIBFLAGS = $(LIBFLAGS) /llvmlibthin
!endif

!if "$(LIBPORTABLE_STATIC)"=="1"
CFLAGS   = $(CFLAGS) /D "LIBPORTABLE_STATIC"
!else
CFLAGS   = $(CFLAGS) /D "LIBPORTABLE_EXPORTS"
!endif

!if "$(TCMALLOC)"=="1"
CFLAGS   = $(CFLAGS) /MT /utf-8 /D "USE_UTF8" /D "VC12_CRT" /D "ENABLE_TCMALLOC" /D "_NO_CRT_STDIO_INLINE"
!elseif "$(MSVC_CRT)"=="1"
CFLAGS   = $(CFLAGS) /MD /GS- /GR-
!else
CFLAGS   = $(CFLAGS) /MD /GS- /GR- /utf-8 /D "USE_UTF8" /D "VC12_CRT"
!endif

!if "$(PLATFORM)"=="X64" || "$(TARGET_CPU)"=="x64" || "$(VSCMD_ARG_HOST_ARCH)"=="x64"
PLATFORM = x64
BITS	 = 64
CFLAGS   = $(CFLAGS) /D "WIN64" /D "_WIN64"
!else
PLATFORM = x86
BITS	 = 32
CFLAGS   = $(CFLAGS) /D "WIN32" /D "_WIN32"
!if "$(CC)"=="clang-cl.exe"
CFLAGS   = $(CFLAGS) --target=i686-pc-windows-msvc
!endif
!endif

MD       = @mkdir
CP	 = copy
RM	 = @del /q
RMDIR    = @rmdir /s /q
SRC      = src
MIN_INC  = include
DEP      = ..\..\.dep

OBJECTS  = $(DEP)\buffer.obj $(DEP)\hde$(BITS).obj $(DEP)\hook.obj $(DEP)\trampoline.obj
CFLAGS   = $(CFLAGS) /I$(MIN_INC)
DISTDIR  = ..\..\Release
OUT      = minhook$(BITS).lib
EXEC     = \
	@echo coming to minhook subdir...  &&\
	@if not exist $(DISTDIR) $(MD) $(DISTDIR) 2>NUL 1>NUL &&\
	@if not exist $(DEP) $(MD) $(DEP) 2>NUL 1>NUL

$(DISTDIR)\$(OUT)      : $(OBJECTS) 
	$(AR) $(LIBFLAGS) $(OBJECTS) /OUT:$@
$(DEP)\buffer.obj      : $(SRC)\buffer.c $(SRC)\buffer.h
	$(EXEC)
	$(CC)  $(CFLAGS) /c $(SRC)\buffer.c /Fo$@
$(DEP)\hde$(BITS).obj  : $(SRC)\HDE\hde$(BITS).c $(SRC)\HDE\hde$(BITS).h
	$(CC) $(CFLAGS) /c $(SRC)\HDE\hde$(BITS).c /Fo$@
$(DEP)\hook.obj        : $(SRC)\hook.c $(MIN_INC)\MinHook.h
	$(CC) $(CFLAGS) /c $(SRC)\hook.c /Fo$@
$(DEP)\trampoline.obj  : $(SRC)\trampoline.c $(SRC)\trampoline.h
	$(CC) $(CFLAGS) /c $(SRC)\trampoline.c  /Fo$@

.PHONY		       : clean
clean                  : 
	-$(RMDIR) $(DISTDIR) $(DEP) 2>NUL 1>NUL

